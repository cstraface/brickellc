{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAHA;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,qcACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,+ZAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,sXAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+ZAAC,sXAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,sXAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,sXAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+ZAAC,sXAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,sXAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,sXAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+ZAAC,sXAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,sXAAA,CAAA,WAAwB,CAAC,WAAW"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/app/%28login%29/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { and, eq, sql } from 'drizzle-orm';\nimport { db } from '@/lib/db/drizzle';\nimport {\n  User,\n  users,\n  teams,\n  teamMembers,\n  activityLogs,\n  type NewUser,\n  type NewTeam,\n  type NewTeamMember,\n  type NewActivityLog,\n  ActivityType,\n  invitations,\n} from '@/lib/db/schema';\nimport { comparePasswords, hashPassword, setSession } from '@/lib/auth/session';\nimport { redirect } from 'next/navigation';\nimport { cookies } from 'next/headers';\nimport { createCheckoutSession } from '@/lib/payments/stripe';\nimport { getUser, getUserWithTeam } from '@/lib/db/queries';\nimport {\n  validatedAction,\n  validatedActionWithUser,\n} from '@/lib/auth/middleware';\n\nasync function logActivity(\n  teamId: number | null | undefined,\n  userId: number,\n  type: ActivityType,\n  ipAddress?: string,\n) {\n  if (teamId === null || teamId === undefined) {\n    return;\n  }\n  const newActivity: NewActivityLog = {\n    teamId,\n    userId,\n    action: type,\n    ipAddress: ipAddress || '',\n  };\n  await db.insert(activityLogs).values(newActivity);\n}\n\nconst signInSchema = z.object({\n  email: z.string().email().min(3).max(255),\n  password: z.string().min(8).max(100),\n});\n\nexport const signIn = validatedAction(signInSchema, async (data, formData) => {\n  const { email, password } = data;\n\n  const userWithTeam = await db\n    .select({\n      user: users,\n      team: teams,\n    })\n    .from(users)\n    .leftJoin(teamMembers, eq(users.id, teamMembers.userId))\n    .leftJoin(teams, eq(teamMembers.teamId, teams.id))\n    .where(eq(users.email, email))\n    .limit(1);\n\n  if (userWithTeam.length === 0) {\n    return {\n      error: 'Invalid email or password. Please try again.',\n      email,\n      password,\n    };\n  }\n\n  const { user: foundUser, team: foundTeam } = userWithTeam[0];\n\n  const isPasswordValid = await comparePasswords(\n    password,\n    foundUser.passwordHash,\n  );\n\n  if (!isPasswordValid) {\n    return {\n      error: 'Invalid email or password. Please try again.',\n      email,\n      password,\n    };\n  }\n\n  await Promise.all([\n    setSession(foundUser),\n    logActivity(foundTeam?.id, foundUser.id, ActivityType.SIGN_IN),\n  ]);\n\n  const redirectTo = formData.get('redirect') as string | null;\n  if (redirectTo === 'checkout') {\n    const priceId = formData.get('priceId') as string;\n    return createCheckoutSession({ team: foundTeam, priceId });\n  }\n\n  redirect('/dashboard');\n});\n\nconst signUpSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  inviteId: z.string().optional(),\n});\n\nexport const signUp = validatedAction(signUpSchema, async (data, formData) => {\n  const { email, password, inviteId } = data;\n\n  const existingUser = await db\n    .select()\n    .from(users)\n    .where(eq(users.email, email))\n    .limit(1);\n\n  if (existingUser.length > 0) {\n    return {\n      error: 'Failed to create user. Please try again.',\n      email,\n      password,\n    };\n  }\n\n  const passwordHash = await hashPassword(password);\n\n  const newUser: NewUser = {\n    email,\n    passwordHash,\n    role: 'owner', // Default role, will be overridden if there's an invitation\n  };\n\n  const [createdUser] = await db.insert(users).values(newUser).returning();\n\n  if (!createdUser) {\n    return {\n      error: 'Failed to create user. Please try again.',\n      email,\n      password,\n    };\n  }\n\n  let teamId: number;\n  let userRole: string;\n  let createdTeam: typeof teams.$inferSelect | null = null;\n\n  if (inviteId) {\n    // Check if there's a valid invitation\n    const [invitation] = await db\n      .select()\n      .from(invitations)\n      .where(\n        and(\n          eq(invitations.id, parseInt(inviteId)),\n          eq(invitations.email, email),\n          eq(invitations.status, 'pending'),\n        ),\n      )\n      .limit(1);\n\n    if (invitation) {\n      teamId = invitation.teamId;\n      userRole = invitation.role;\n\n      await db\n        .update(invitations)\n        .set({ status: 'accepted' })\n        .where(eq(invitations.id, invitation.id));\n\n      await logActivity(teamId, createdUser.id, ActivityType.ACCEPT_INVITATION);\n\n      [createdTeam] = await db\n        .select()\n        .from(teams)\n        .where(eq(teams.id, teamId))\n        .limit(1);\n    } else {\n      return { error: 'Invalid or expired invitation.', email, password };\n    }\n  } else {\n    // Create a new team if there's no invitation\n    const newTeam: NewTeam = {\n      name: `${email}'s Team`,\n    };\n\n    [createdTeam] = await db.insert(teams).values(newTeam).returning();\n\n    if (!createdTeam) {\n      return {\n        error: 'Failed to create team. Please try again.',\n        email,\n        password,\n      };\n    }\n\n    teamId = createdTeam.id;\n    userRole = 'owner';\n\n    await logActivity(teamId, createdUser.id, ActivityType.CREATE_TEAM);\n  }\n\n  const newTeamMember: NewTeamMember = {\n    userId: createdUser.id,\n    teamId: teamId,\n    role: userRole,\n  };\n\n  await Promise.all([\n    db.insert(teamMembers).values(newTeamMember),\n    logActivity(teamId, createdUser.id, ActivityType.SIGN_UP),\n    setSession(createdUser),\n  ]);\n\n  const redirectTo = formData.get('redirect') as string | null;\n  if (redirectTo === 'checkout') {\n    const priceId = formData.get('priceId') as string;\n    return createCheckoutSession({ team: createdTeam, priceId });\n  }\n\n  redirect('/dashboard');\n});\n\nexport async function signOut() {\n  const user = (await getUser()) as User;\n  const userWithTeam = await getUserWithTeam(user.id);\n  await logActivity(userWithTeam?.teamId, user.id, ActivityType.SIGN_OUT);\n  (await cookies()).delete('session');\n}\n\nconst updatePasswordSchema = z\n  .object({\n    currentPassword: z.string().min(8).max(100),\n    newPassword: z.string().min(8).max(100),\n    confirmPassword: z.string().min(8).max(100),\n  })\n  .refine((data) => data.newPassword === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: ['confirmPassword'],\n  });\n\nexport const updatePassword = validatedActionWithUser(\n  updatePasswordSchema,\n  async (data, _, user) => {\n    const { currentPassword, newPassword } = data;\n\n    const isPasswordValid = await comparePasswords(\n      currentPassword,\n      user.passwordHash,\n    );\n\n    if (!isPasswordValid) {\n      return { error: 'Current password is incorrect.' };\n    }\n\n    if (currentPassword === newPassword) {\n      return {\n        error: 'New password must be different from the current password.',\n      };\n    }\n\n    const newPasswordHash = await hashPassword(newPassword);\n    const userWithTeam = await getUserWithTeam(user.id);\n\n    await Promise.all([\n      db\n        .update(users)\n        .set({ passwordHash: newPasswordHash })\n        .where(eq(users.id, user.id)),\n      logActivity(userWithTeam?.teamId, user.id, ActivityType.UPDATE_PASSWORD),\n    ]);\n\n    return { success: 'Password updated successfully.' };\n  },\n);\n\nconst deleteAccountSchema = z.object({\n  password: z.string().min(8).max(100),\n});\n\nexport const deleteAccount = validatedActionWithUser(\n  deleteAccountSchema,\n  async (data, _, user) => {\n    const { password } = data;\n\n    const isPasswordValid = await comparePasswords(password, user.passwordHash);\n    if (!isPasswordValid) {\n      return { error: 'Incorrect password. Account deletion failed.' };\n    }\n\n    const userWithTeam = await getUserWithTeam(user.id);\n\n    await logActivity(\n      userWithTeam?.teamId,\n      user.id,\n      ActivityType.DELETE_ACCOUNT,\n    );\n\n    // Soft delete\n    await db\n      .update(users)\n      .set({\n        deletedAt: sql`CURRENT_TIMESTAMP`,\n        email: sql`CONCAT(email, '-', id, '-deleted')`, // Ensure email uniqueness\n      })\n      .where(eq(users.id, user.id));\n\n    if (userWithTeam?.teamId) {\n      await db\n        .delete(teamMembers)\n        .where(\n          and(\n            eq(teamMembers.userId, user.id),\n            eq(teamMembers.teamId, userWithTeam.teamId),\n          ),\n        );\n    }\n\n    (await cookies()).delete('session');\n    redirect('/sign-in');\n  },\n);\n\nconst updateAccountSchema = z.object({\n  name: z.string().min(1, 'Name is required').max(100),\n  email: z.string().email('Invalid email address'),\n});\n\nexport const updateAccount = validatedActionWithUser(\n  updateAccountSchema,\n  async (data, _, user) => {\n    const { name, email } = data;\n    const userWithTeam = await getUserWithTeam(user.id);\n\n    await Promise.all([\n      db.update(users).set({ name, email }).where(eq(users.id, user.id)),\n      logActivity(userWithTeam?.teamId, user.id, ActivityType.UPDATE_ACCOUNT),\n    ]);\n\n    return { success: 'Account updated successfully.' };\n  },\n);\n\nconst removeTeamMemberSchema = z.object({\n  memberId: z.number(),\n});\n\nexport const removeTeamMember = validatedActionWithUser(\n  removeTeamMemberSchema,\n  async (data, _, user) => {\n    const { memberId } = data;\n    const userWithTeam = await getUserWithTeam(user.id);\n\n    if (!userWithTeam?.teamId) {\n      return { error: 'User is not part of a team' };\n    }\n\n    await db\n      .delete(teamMembers)\n      .where(\n        and(\n          eq(teamMembers.id, memberId),\n          eq(teamMembers.teamId, userWithTeam.teamId),\n        ),\n      );\n\n    await logActivity(\n      userWithTeam.teamId,\n      user.id,\n      ActivityType.REMOVE_TEAM_MEMBER,\n    );\n\n    return { success: 'Team member removed successfully' };\n  },\n);\n\nconst inviteTeamMemberSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  role: z.enum(['member', 'owner']),\n});\n\nexport const inviteTeamMember = validatedActionWithUser(\n  inviteTeamMemberSchema,\n  async (data, _, user) => {\n    const { email, role } = data;\n    const userWithTeam = await getUserWithTeam(user.id);\n\n    if (!userWithTeam?.teamId) {\n      return { error: 'User is not part of a team' };\n    }\n\n    const existingMember = await db\n      .select()\n      .from(users)\n      .leftJoin(teamMembers, eq(users.id, teamMembers.userId))\n      .where(\n        and(\n          eq(users.email, email),\n          eq(teamMembers.teamId, userWithTeam.teamId),\n        ),\n      )\n      .limit(1);\n\n    if (existingMember.length > 0) {\n      return { error: 'User is already a member of this team' };\n    }\n\n    // Check if there's an existing invitation\n    const existingInvitation = await db\n      .select()\n      .from(invitations)\n      .where(\n        and(\n          eq(invitations.email, email),\n          eq(invitations.teamId, userWithTeam.teamId),\n          eq(invitations.status, 'pending'),\n        ),\n      )\n      .limit(1);\n\n    if (existingInvitation.length > 0) {\n      return { error: 'An invitation has already been sent to this email' };\n    }\n\n    // Create a new invitation\n    await db.insert(invitations).values({\n      teamId: userWithTeam.teamId,\n      email,\n      role,\n      invitedBy: user.id,\n      status: 'pending',\n    });\n\n    await logActivity(\n      userWithTeam.teamId,\n      user.id,\n      ActivityType.INVITE_TEAM_MEMBER,\n    );\n\n    // TODO: Send invitation email and include ?inviteId={id} to sign-up URL\n    // await sendInvitationEmail(email, userWithTeam.team.name, role)\n\n    return { success: 'Invitation sent successfully' };\n  },\n);\n"],"names":[],"mappings":";;;;;;;;;;;;IAmDa;IAyDA;IAmHS;IAkBT;IAuCA;IAgDA;IAmBA;IAkCA"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/cstraface/brickellc/brickellc/app/%28dashboard%29/layout.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { use, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Home, LogOut } from 'lucide-react';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger\n} from '@/components/ui/dropdown-menu';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { useUser } from '@/lib/auth';\nimport { signOut } from '@/app/(login)/actions';\nimport { useRouter } from 'next/navigation';\n\nfunction Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const { userPromise } = useUser();\n  const user = use(userPromise);\n  const router = useRouter();\n\n  async function handleSignOut() {\n    await signOut();\n    router.refresh();\n    router.push('/');\n  }\n\n  return (\n    <header className=\"border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n        <Link href=\"/\" className=\"flex items-center\">\n          <img \n            src=\"/img/logo.png\" \n            alt=\"Shopify Store Management\" \n            className=\"h-6 w-6\"\n          />\n          <span className=\"ml-2 text-xl font-semibold text-gray-900\">The Shop Clerk</span>\n        </Link>\n        <div className=\"flex items-center space-x-4\">\n          <Link\n            href=\"/about\"\n            className=\"text-sm font-medium text-gray-700 hover:text-gray-900\"\n          >\n            About\n          </Link>\n          <Link\n            href=\"/pricing\"\n            className=\"text-sm font-medium text-gray-700 hover:text-gray-900\"\n          >\n            Pricing\n          </Link>\n           {user ? (\n            <DropdownMenu open={isMenuOpen} onOpenChange={setIsMenuOpen}>\n              <DropdownMenuTrigger>\n                <Avatar className=\"cursor-pointer size-9\">\n                  <AvatarImage alt={user.name || ''} />\n                  <AvatarFallback>\n                    {user.email\n                      .split(' ')\n                      .map((n) => n[0])\n                      .join('')}\n                  </AvatarFallback>\n                </Avatar>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\" className=\"flex flex-col gap-1\">\n                <DropdownMenuItem className=\"cursor-pointer\">\n                  <Link href=\"/dashboard\" className=\"flex w-full items-center\">\n                    <Home className=\"mr-2 h-4 w-4\" />\n                    <span>Dashboard</span>\n                  </Link>\n                </DropdownMenuItem>\n                <form action={handleSignOut} className=\"w-full\">\n                  <button type=\"submit\" className=\"flex w-full\">\n                    <DropdownMenuItem className=\"w-full flex-1 cursor-pointer\">\n                      <LogOut className=\"mr-2 h-4 w-4\" />\n                      <span>Sign out</span>\n                    </DropdownMenuItem>\n                  </button>\n                </form>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          ) : ( \n            <Button\n              asChild\n              className=\"bg-black hover:bg-gray-800 text-white text-sm px-4 py-2 rounded-full\"\n            >\n              <Link href=\"/sign-up\">Sign Up</Link>\n            </Button>\n          )} \n          {/*<Button\n              asChild\n              className=\"bg-black hover:bg-gray-800 text-white text-sm px-4 py-2 rounded-full\"\n            >\n              <Link href=\"https://billing.stripe.com/p/login/5kAfZG9JF0OfeHueUU\">Sign In</Link>\n            </Button>*/}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <section className=\"flex flex-col\">\n      <Header />\n      {children}\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAVA;AAAA;AALA;;;;;;;;;;;AAiBA,SAAS;IACP,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,sXAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAO,AAAD;IAC9B,MAAM,OAAO,CAAA,GAAA,sXAAA,CAAA,MAAG,AAAD,EAAE;IACjB,MAAM,SAAS,CAAA,GAAA,mTAAA,CAAA,YAAS,AAAD;IAEvB,eAAe;QACb,MAAM,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;QACZ,OAAO,OAAO;QACd,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,+ZAAC;QAAO,WAAU;kBAChB,cAAA,+ZAAC;YAAI,WAAU;;8BACb,+ZAAC,6UAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,+ZAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;sCAEZ,+ZAAC;4BAAK,WAAU;sCAA2C;;;;;;;;;;;;8BAE7D,+ZAAC;oBAAI,WAAU;;sCACb,+ZAAC,6UAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;sCAGD,+ZAAC,6UAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;wBAGC,qBACA,+ZAAC,qIAAA,CAAA,eAAY;4BAAC,MAAM;4BAAY,cAAc;;8CAC5C,+ZAAC,qIAAA,CAAA,sBAAmB;8CAClB,cAAA,+ZAAC,2HAAA,CAAA,SAAM;wCAAC,WAAU;;0DAChB,+ZAAC,2HAAA,CAAA,cAAW;gDAAC,KAAK,KAAK,IAAI,IAAI;;;;;;0DAC/B,+ZAAC,2HAAA,CAAA,iBAAc;0DACZ,KAAK,KAAK,CACR,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,EACf,IAAI,CAAC;;;;;;;;;;;;;;;;;8CAId,+ZAAC,qIAAA,CAAA,sBAAmB;oCAAC,OAAM;oCAAM,WAAU;;sDACzC,+ZAAC,qIAAA,CAAA,mBAAgB;4CAAC,WAAU;sDAC1B,cAAA,+ZAAC,6UAAA,CAAA,UAAI;gDAAC,MAAK;gDAAa,WAAU;;kEAChC,+ZAAC,uRAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;kEAChB,+ZAAC;kEAAK;;;;;;;;;;;;;;;;;sDAGV,+ZAAC;4CAAK,QAAQ;4CAAe,WAAU;sDACrC,cAAA,+ZAAC;gDAAO,MAAK;gDAAS,WAAU;0DAC9B,cAAA,+ZAAC,qIAAA,CAAA,mBAAgB;oDAAC,WAAU;;sEAC1B,+ZAAC,8RAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;sEAClB,+ZAAC;sEAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDAOhB,+ZAAC,2HAAA,CAAA,SAAM;4BACL,OAAO;4BACP,WAAU;sCAEV,cAAA,+ZAAC,6UAAA,CAAA,UAAI;gCAAC,MAAK;0CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAapC;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBACE,+ZAAC;QAAQ,WAAU;;0BACjB,+ZAAC;;;;;YACA;;;;;;;AAGP"}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}